// Copyright 2006-2010 (C) - Frictional Games
//
// This file is part of HPL1 Engine
//
// For conditions of distribution and use, see copyright notice in LICENSE-shaders
//

///////////////////////////////////////////////////////
/// DIFFUSE LIGHTING FRAGMENT PROGRAM /////////////////
///////////////////////////////////////////////////////

in vec4 vLightColor;
in vec2 vUv;
in vec3 vLightDir;

OUTPUT

uniform sampler2D tex0; //diffuseMap
uniform samplerCube tex2; //normalCubeMap
uniform sampler1D tex3; //falloffMap

void main()
{
	float attenuation = texture1D(tex3,dot(vLightDir,vLightDir)).x;

	vec3 lightDir = (2.0*textureCube(tex2,vLightDir)-vec4(1.0)).xyz;

	outColor.xyz = attenuation * texture(tex0, vUv).xyz * vLightColor.xyz * dot(lightDir, vec3(0,0,1));
	outColor.w = 0.0;
}
