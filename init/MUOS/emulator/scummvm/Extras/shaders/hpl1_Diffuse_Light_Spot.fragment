// Copyright 2006-2010 (C) - Frictional Games
//
// This file is part of HPL1 Engine
//
// For conditions of distribution and use, see copyright notice in LICENSE-shaders
//

///////////////////////////////////////////////////////
/// DIFFUSE SPOT LIGHTING FRAGMENT PROGRAM /////////////
///////////////////////////////////////////////////////

in vec4 vLightColor;
in vec2 vUv;
in vec3 vLightDir;
in vec4 vSpotlightUv;

OUTPUT

uniform sampler2D tex0; //diffuseMap
uniform samplerCube tex2; //normalCubeMap
uniform sampler1D tex3; //falloffMap
uniform sampler2D tex4; //spotlightMap
uniform sampler1D tex5; //spotNegRejectMap

void main()
{
	vec3 diffuse = texture(tex0, vUv).xyz;
	vec3 lightNormal = (2.0*textureCube(tex2,vLightDir)-vec4(1.0)).xyz;
    float  attenuation = texture1D(tex3,dot(vLightDir,vLightDir)).x;
	vec3 spotColor = texture(tex4, vSpotlightUv.xy / vSpotlightUv.w).xyz;
	float rejectNeg = texture1D(tex5,vSpotlightUv.z + 0.5).x;

	outColor.xyz = diffuse * dot(lightNormal, vec3(0,0,1)) * attenuation *
						vLightColor.xyz * spotColor * rejectNeg;
}
